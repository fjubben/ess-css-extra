#!groovyâ€‹
import hudson.model.*

node('css') {

def build = Thread.currentThread().executable
def pa = new ParametersAction([
  new StringParameterValue("MAVEN_OPTS", "-Xmx2048m -Xms1024M -Xss128M -XX:-UseGCOverheadLimit")
])
build.addAction(pa)
def MVNOPT="-B -P ess-css-settings,platform-default,csstudio-composite-repo-enable,eclipse-sites"

    stage('00000 - workspace-prep '){
        echo "csstudioRepo = ${env.csstudioRepo}"
        echo "branch = ${env.repoBranch} \nsend email to: ${env.email}"
        echo "MVNOPT=${MVNOPT}  \nrunning on jenkinslave: ${env.NODE_NAME}"
        echo "project will be built in to ${env.WORKSPACE}/${env.buildFolder}"
        echo "path to workspace: ${env.WORKSPACE}"
        sh "export"
        pwd()
        dir("../${buildFolder}"){
          deleteDir() // rm -rf *
        }
    }
    stage('00100 - clone css-extra'){
        dir("../${buildFolder}/ess-css-extra"){
          git(url: 'https://github.com/fjubben/ess-css-extra.git', branch: "newtest")
          dir('maven'){
            sh "sed -i -e s/###replace###/${env.buildFolder}/g settings-for-jenkins-sed.xml"
            sh 'cat settings-for-jenkins-sed.xml'
          }
        }
    }
    stage('00200 - maven-osgi-bundles '){
        pwd()
        dir("../${buildFolder}/maven-osgi-bundles"){
          pwd()
          git(url: "${csstudioRepo}/maven-osgi-bundles.git", branch: "${repoBranch}")
          sh "mvn ${MVNOPT} --settings ../ess-css-extra/maven/settings-for-jenkins-sed.xml clean verify"
        }
    }
    stage('00300 - cs-studio-thirdparty'){
        dir("../${buildFolder}/cs-studio-thirdparty"){
          git(url: "${csstudioRepo}/cs-studio-thirdparty.git", branch: "${repoBranch}")
          sh "mvn ${MVNOPT} --settings ../ess-css-extra/maven/settings-for-jenkins-sed.xml clean verify"
        }
    }
    stage('00400 - diirt'){
        dir("../${buildFolder}/diirt"){
          git(url: "${csstudioRepo}/diirt", branch: "${repoBranch}")
          sh "mvn ${MVNOPT} --settings ../ess-css-extra/maven/settings-for-jenkins-sed.xml clean verify"
        }
    }
    stage('00500 - cs-studio'){
        dir("../${buildFolder}/cs-studio"){
          git(url: "${csstudioRepo}/cs-studio", branch: "${repoBranch}")
          dir("core"){
            sh "mvn ${MVNOPT} --settings  ../../ess-css-extra/maven/settings-for-jenkins-sed.xml clean verify"
          }
          dir("applications"){
            sh "mvn ${MVNOPT} --settings ../../ess-css-extra/maven/settings-for-jenkins-sed.xml clean verify"
          }
        }
    }
    stage('00550 - org.csstudio.display.builder'){
        dir("../${buildFolder}/org.csstudio.display.builder"){
          git(url: "${env.displayBuilderRepo}", branch: "${repoBranch}")
          sh "mvn ${MVNOPT} --settings ../ess-css-extra/maven/settings-for-jenkins-sed.xml -Dcss_repo=file:${env.WORKSPACE}/../${env.buildFolder}/ess-css-extra/ess_css_comp_repo clean verify"
        }
    }
    stage('00600 - org.csstudio.product'){
        dir("../${buildFolder}/org.csstudio.product"){
          git(url: "${csstudioRepo}/org.csstudio.product.git", branch: "${repoBranch}")
          sh "mvn ${MVNOPT} --settings ../ess-css-extra/maven/settings-for-jenkins-sed.xml clean verify"
        }

    }
    stage('00700 - org.csstudio.ess.product'){
      steps{
        dir("../${buildFolder}/org.csstudio.ess.product"){
          git(url: "${csstudioRepo}/org.csstudio.ess.product.git", branch: "${repoBranch}")
          sh "mvn ${MVNOPT} --settings ../ess-css-extra/maven/settings-for-jenkins-sed.xml clean verify"
        }
      }
    }
    stage ('00700 - Ship artifact - optional') {
      if (${useArtifact == 'true'}){
        dir("../${buildFolder}") {

            def server = Artifactory.server "${env.artifacoryServerID}"
            def versionNBR = sh (script: """grep -oEm 1 -e '<version>(.*?)</version>' ${env.WORKSPACE}/../${env.buildFolder}/org.csstudio.ess.product/pom.xml | cut -d ">" -f2 | cut -d "<" -f1""", returnStdout: true).trim()
            def uploadSpec = """{
            "files": [
            {
              "pattern": "org.csstudio.ess.product/repository/target/products/*.tar.gz",
              "target": "${artifactoryFolder}/${versionNBR}/"
            },
            {
              "pattern": "org.csstudio.ess.product/repository/target/products/*.zip",
              "target": "${artifactoryFolder}/${versionNBR}/"
            }
            ]
            }"""
            server.upload(uploadSpec)
        }
      }
    }
    stage('00800 - clean up'){
        dir("../${buildFolder}"){
          deleteDir()
        }
        deleteDir()
    }
  }
